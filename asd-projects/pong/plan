Always start any programming task by clarifying what you want to do and then breaking it down into small steps. Small steps can get you just about anywhere if you’ve got enough time. If you get stuck, break it down smaller!

With your partner, consider each of these questions and make sure you are aligned on your answers:

User Story / Gameplay
Describe the gameplay
“Pong is a game played by two players who each control a paddle placed at opposite sides of the screen. A ball is hit back and forth between the two paddles, and the top and bottom walls, until the ball goes past one player's paddle. The player who misses the ball loses the point. “


What are the conditions when the game begins?
The ball moves in a direction randomly with a fixed speed

Does the game have an end? If so, what are the conditions for when it ends?
“The game ends when one player reaches 11 points.”

What [ifs] will there be?

If (positionX/positionY = paddle or walls) {
speedX/speedY=-speedX/speedY};
if (ballPositionX > arena){
pointLeft + 1
ballPosition=middleOfArena
}
if (ballPositionX < arena){
pointRight + 1
ballPosition=middleOfArena
}
If (paddle = walls){
 paddleSpeed=0 
paddlePosition!=++
}

Visual Game Components:
What are the visual game components? For example, in Bouncing Box, the game components were the board and the box.
The paddles, the ball, the arena, and the points

Which will be static? (the board)
Points and the walls

Which will be animated? (the box)
The ball and the paddles

What data will you need to manage each game component? For example, in Bouncing Box, the data values were positionX, speedX, and points.
Points, ball, and paddles

Events / Logic
What events will occur in this game? (timer events, keyboard events, clicking events?)
Keyboard and click events
Keyboard events: directional keys such as the w, s, up arrow, down arrow keys 
Click events: to start, pause, or restart the game.(or even to select difficulty)
How do those events affect the data of the program?
The code would start the game and the paddles and ball would moveprior to the game starting
the paddle and ball should not move till the player is ready, and pausing should freeze the ball and paddles 
in place until the game is resumed

For each "event", write out the high-level logic of what will happen. It is better (and tricky) to be as specific as you can while remaining high-level!
//if statment for game start and end also for pause and resume 
the code for the game play would have functions corresponding to the state of the if statements
and the core gamplay should respont to the function that check the if statements
so the state of the game would affect the state of the if statements//
For example: in bouncing box, when the box is clicked:

The speed is increased
The point total goes up by 1 and is displayed on the box
The position of the box is reset to 0
